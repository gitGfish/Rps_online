{"version":3,"sources":["socket.js","components/Tile.js","components/GameBoard.js","views/Game.js","components/Board.js","views/Lobby.js","views/MainMenu.js","App.js","serviceWorker.js","index.js"],"names":["socket","openSocket","colors","Tile","props","useState","type","style","flex","display","flexDirection","justifyContent","alignItems","onClick","disabled","handleClick","x_index","y_index","background","height","width","num","color","selected_tile","size","iconTile","marginTop","number","GameBoard","Board","setBoard","setSelectedTile","rerender_board","freeTiles","length","console","log","my_turn","player_id","makeMove","checkSelsectTile","from_x","from_y","isSelected","useEffect","board","key","map","row","tile","Game","location","setName","state_room","setRoom","setIsReady","setMyTurn","Error","setError","setPlayerId","users_in_room","setUsersInRoom","setRerenderBoard","queryString","parse","search","name","room","on","users","stringUsers","user","game","turn","Date","emit","find","off","minHeight","border","Card","padding","margin","marginBottom","setBoardReady","to","process","available_tiles","setAvailableTiles","newValue","value","tmp","checkMoveLigal","newBoard","index","checkBoardReady","ready_stage","count","Lobby","state_name","is_ready","is_all_ready","setIsAllReady","board_ready","readyClicked","status","error","Button","variant","MainMenu","placeholder","onChange","e","target","preventDefault","App","path","exact","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.05a46b11.chunk.js","sourcesContent":["import openSocket from 'socket.io-client';\r\n\r\nconst socket = openSocket(\"https://rps-backend2.herokuapp.com/\");\r\n\r\nexport default socket;","import React ,{useEffect,useState} from 'react';\r\nimport { TiScissorsOutline } from 'react-icons/ti';\r\nimport { GiRock,GiBoxTrap } from 'react-icons/gi';\r\nimport { FaToiletPaper,FaFlag } from 'react-icons/fa';\r\n\r\nconst colors = [\"#f4f4f4\",\"#4fc1e8\",\"#a0d568\",\"#ffce54\",\"#ac92eb\",\"#ed5564\"]\r\nfunction Tile(props) {\r\n\r\n    const [type, setType] = useState(props.type);\r\n    \r\n\r\n    function handleClick(){\r\n\r\n        if(!props.disabled){\r\n            props.handleClick(props.x_index,props.y_index )\r\n        \r\n        }\r\n\r\n    }\r\n    function iconTile(num) {\r\n        switch (num) {\r\n            case 0:\r\n                return (null)\r\n            case 1:\r\n                return (<GiRock color={(props.selected_tile) ? \"blue\" : \"black\"} size={'3em'}/>)\r\n            case 2:\r\n                return (<FaToiletPaper color={(props.selected_tile) ? \"blue\" : \"black\"} size={'3em'}/>)\r\n            case 3:\r\n                return (<TiScissorsOutline size={'3em'}/>)\r\n            case 4:\r\n                return (<GiBoxTrap size={'3em'}/>)\r\n            case 5:\r\n                return (<FaFlag size={'3em'}/>)\r\n        \r\n            default:\r\n                return (null)\r\n        }\r\n    }\r\n\r\n  return (\r\n    <div style={{flex:1 ,display:'flex', flexDirection:'column' , justifyContent:'center' ,alignItems:'center'}}>\r\n        <button onClick={handleClick} style={{background:colors[type] , height:70,width:70}}> {iconTile(type)}  </button>\r\n        {(props.disabled) ? (\r\n            <h5 style={{marginTop:10}}>\r\n                {props.number}\r\n            </h5>\r\n            ) : null }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tile;\r\n","import React ,{useState,useEffect} from 'react';\r\nimport Tile  from './Tile';\r\nfunction GameBoard(props) {\r\n\r\n    const [Board, setBoard] = useState([[],[],[],[],[],[],[],[]]);\r\n    const [selected_tile, setSelectedTile] = useState(null);\r\n    const [rerender_board, setRerenderBoard] = useState();\r\n    useEffect(() => {\r\n        setBoard(props.board)\r\n    }, [props.board]);\r\n\r\n    \r\n    function freeTiles (x_index,y_index){\r\n        if(x_index >= Board.length || y_index >= Board[0].length || x_index < 0 || y_index <0 )\r\n            {\r\n                console.log(\"something went wrong\")\r\n                    return false;\r\n            }\r\n        if(Board[x_index][y_index]['player_id'] === props.my_turn ){\r\n            return false;\r\n        }\r\n        return true\r\n    }\r\n\r\n\r\n    function checkSelsectTile(x_index,y_index){\r\n        if(x_index > Board.length || y_index > Board[0].length || x_index < 0 || y_index <0 )\r\n            {\r\n                console.log(\"something went wrong\")\r\n                return false;\r\n            }\r\n        if(Board[x_index][y_index]['player_id'] !== props.my_turn ){\r\n                console.log(\"not your player select difrent tile\",Board[x_index][y_index]['player_id'] )\r\n                return false;\r\n            }\r\n        if(freeTiles(x_index + 1,y_index) || freeTiles(x_index - 1,y_index) \r\n                || freeTiles(x_index ,y_index + 1 ) || freeTiles(x_index,y_index - 1))\r\n            {\r\n                return true\r\n            }\r\n        return false\r\n    }\r\n\r\n    function handleClick(x_index,y_index){\r\n        if(props.player_id === props.my_turn){\r\n            if(selected_tile){\r\n                console.log(x_index,y_index)\r\n                props.makeMove(x_index,y_index,selected_tile['from_x'],selected_tile['from_y'])\r\n                setSelectedTile(null)\r\n                // props.setMyTurn((props.my_turn + 1)%2)\r\n            }else{\r\n                \r\n                if(checkSelsectTile(x_index,y_index)){\r\n                    setSelectedTile({from_x:x_index,from_y:y_index })\r\n                }else{\r\n                    setSelectedTile(null)\r\n                }\r\n            }\r\n            \r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    function isSelected(x_index,y_index){\r\n        if(!selected_tile)\r\n            return false\r\n        if(selected_tile['from_x'] === x_index && selected_tile['from_y'] === y_index){\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n    \r\n  return (\r\n    <div key={rerender_board} style={{display:'flex',flexDirection:'column'}}>\r\n            {Board.map((row,x_index) => {\r\n                return (\r\n                    <div style={{display:'flex',flexDirection:'row'}}>\r\n                        {row.map( (type,y_index) => {\r\n                            // number={(x_index * Board[0].length + y_index) + \"\"}\r\n                            return(<Tile selected_tile={isSelected(x_index,y_index)} handleClick={handleClick} key={y_index} x_index={x_index} y_index={y_index} type={type.tile} />)})\r\n                        }\r\n                    </div>)\r\n            })}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameBoard;\r\n","import React,{useState,useEffect} from 'react';\r\nimport queryString from 'query-string'\r\nimport socket from \"../socket.js\";\r\nimport GameBoard from \"../components/GameBoard\"\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Tile from '../components/Tile'\r\nimport Card from 'react-bootstrap/Card';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport MeetingRoomIcon from '@material-ui/icons/MeetingRoom';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction Game({location}) {\r\n    const [state_name, setName] = useState('');\r\n    const [state_room, setRoom] = useState('');\r\n    const [is_ready, setIsReady] = useState(false)\r\n    const [board, setBoard] = useState([]);\r\n    const [my_turn, setMyTurn] = useState(true);\r\n    const [Error, setError] = useState(null);\r\n    const [player_id, setPlayerId] = useState(null);\r\n    const [users_in_room, setUsersInRoom] = useState([]);\r\n    const [rerender_board, setRerenderBoard] = useState();\r\n    useEffect(() => {\r\n        const {name,room} = queryString.parse(location.search)\r\n\r\n        setName(name)\r\n        setRoom(room)\r\n        socket.on('usersInRoom', (users)=>{\r\n            console.log('usersinroom')\r\n            if(users.length < 2){\r\n                setError('error user left')\r\n                return\r\n            }\r\n            \r\n            const stringUsers = users.map(user => `${user.name}`)\r\n            setUsersInRoom(stringUsers)\r\n        })\r\n\r\n        socket.on('updateGame', (game)=>{\r\n            console.log('update')\r\n            if(!game){\r\n                setError('error game fail')\r\n                return\r\n            }\r\n            setBoard(game.board)\r\n            setMyTurn((game.turn) ? 0 : 1 )\r\n            setRerenderBoard(\"supper-uniqe-key\"+ new Date())\r\n            \r\n        })\r\n\r\n\r\n        socket.emit('startedGame',{room,name} , (users,game,name)=>{\r\n            console.log(users)\r\n            console.log(game)\r\n            if(!game){\r\n                setError('error game not found')\r\n                return\r\n            }\r\n            const user = users.find((user) => user.name === name)\r\n            if(!user){\r\n                setError('error user doesnt exists')\r\n                return\r\n            }\r\n            setPlayerId(user['player_id'])\r\n            setBoard(game.board)\r\n            setMyTurn((game.turn) ? 0 : 1 )\r\n            const stringUsers = users.map(user => `${user.name} `)\r\n            setUsersInRoom(stringUsers)\r\n        })\r\n\r\n        \r\n        \r\n        return () => {\r\n            socket.emit('disconnect',socket)\r\n            socket.off()\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        socket.emit('usersInRoom', (users_in_room,() => {\r\n\r\n        }))\r\n    }, [users_in_room]);\r\n\r\n\r\n\r\n    function makeMove(x_index,y_index,from_x,from_y) {\r\n        socket.emit('move' , {room:state_room,x_index,y_index,from_x,from_y} , () => {\r\n            \r\n        })\r\n    }\r\n\r\n\r\n  return (\r\n    <div style={{minHeight:'100%', border:'solid', display:'flex',justifyContent:'center',alignItems:'center'}}>\r\n        <Card style={{padding:40}}>\r\n            <div style={{display:'flex' ,justifyContent:'center',margin:20}}>\r\n                <h1 >\r\n                    Rps online\r\n                </h1>\r\n            </div>\r\n            <div style={{display:'flex' ,justifyContent:'space-between'}}>\r\n                <Card style={{flex:1,flexDirection:'row',justifyContent:'center',alignItems:'center',padding:10,margin:10}}>\r\n                    <AccountCircleIcon/>\r\n                    &nbsp;\r\n                    <h5>\r\n                        {(users_in_room && users_in_room.length > 0 ) ? `player 1: ${users_in_room[0]['name']}` : `waiting`}\r\n                    </h5>\r\n                        {(users_in_room && users_in_room[0] && users_in_room[0]['is_ready']) ? <CheckBoxIcon/> : <CheckBoxOutlineBlankIcon/>}\r\n                </Card>\r\n                <Card style={{flex:1,flexDirection:'row',justifyContent:'center',alignItems:'center',padding:10,margin:10}}>\r\n                    <AccountCircleIcon/>\r\n                    &nbsp;\r\n                    <h5>\r\n                        {(users_in_room && users_in_room.length > 1 ) ? `player 2: ${users_in_room[1]['name']}` : `waiting`}\r\n                    </h5>\r\n                        {(users_in_room && users_in_room[1] && users_in_room[1]['is_ready']) ? <CheckBoxIcon/> : <CheckBoxOutlineBlankIcon/>}\r\n                </Card>\r\n                <Card style={{flex:1,flexDirection:'row',justifyContent:'center',alignItems:'center',padding:10,margin:10}}>\r\n                    <MeetingRoomIcon/>\r\n                    &nbsp;\r\n                    <h5>\r\n                        room: {state_room}\r\n                    </h5>\r\n                </Card>\r\n            </div>\r\n            <div style={{flex:1,marginBottom:10 ,display:'flex', justifyContent:'center',alignItems:'stretch'}}>\r\n                <Card style={{flex:1,flexDirection:'row',justifyContent:'center',alignItems:'center',padding:10,margin:10}}>\r\n                    <MeetingRoomIcon/>\r\n                    &nbsp;\r\n                    <h5>\r\n                        turn: {my_turn}\r\n                    </h5>\r\n                </Card>\r\n            </div>\r\n            \r\n            <GameBoard key={rerender_board} my_turn={my_turn} makeMove={makeMove} setMyTurn={setMyTurn} player_id={player_id} setBoardReady={setIsReady} board={board} setBoard={setBoard}/>\r\n            {(Error) ? <Redirect to={`${process.env.PUBLIC_URL}/`}/> : null }\r\n        </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n","import React ,{useState,useEffect} from 'react';\r\n\r\nimport Tile  from './Tile';\r\nfunction Board(props) {\r\n\r\n    const [Board, setBoard] = useState((props.board) ? props.board : [[],[],[],[],[],[],[],[]]);\r\n    const [available_tiles, setAvailableTiles] = useState([0,5,5,4,1,1]);\r\n    \r\n    const [rerender_board, setRerenderBoard] = useState();\r\n    useEffect(() => {\r\n        setBoard(Board.map((row,index) => {\r\n            return ([0,0,0,0,0,0,0,0])\r\n        }))\r\n    }, []);\r\n\r\n    function checkBoardReady(){\r\n        for (let index = 1; index < available_tiles.length; index++) {\r\n            const element = available_tiles[index];\r\n            if(element >0 ){\r\n                props.setBoardReady(false)\r\n                return\r\n            }\r\n            \r\n        }\r\n        props.setBoard([...Board])\r\n        props.setBoardReady(true)\r\n    }\r\n\r\n    function checkMoveLigal(x_index,y_index){\r\n        if(x_index > Board.length || y_index > Board[0].length || x_index < 6 || y_index <0 )\r\n        {\r\n            console.log(\"something went wrong\")\r\n            return -1;\r\n        }\r\n        const value = Board[x_index][y_index]\r\n        let newValue;\r\n        \r\n        for(newValue = (value +1)%6 ; newValue < 15 ; newValue = ((newValue + 1)%6)){\r\n            if(available_tiles[newValue] > 0 ) {\r\n                let tmp = [...available_tiles]\r\n                tmp[value] = tmp[value] + 1\r\n                tmp[newValue] = tmp[newValue] - 1\r\n                setAvailableTiles([...tmp]);\r\n                \r\n                return newValue;\r\n                \r\n            }\r\n        }\r\n        return -1;\r\n\r\n    }\r\n    useEffect(() => {\r\n        checkBoardReady();\r\n    }, [Board]);\r\n\r\n    function handleClick(x_index,y_index){\r\n        const newValue = checkMoveLigal(x_index,y_index)\r\n        if(newValue >= 0){\r\n            let newBoard = [...Board]\r\n            newBoard[x_index][y_index] = newValue\r\n            setBoard([...newBoard])\r\n            setRerenderBoard(\"supper-uniqe-key\"+ new Date()+newValue)\r\n        }\r\n        \r\n    }\r\n  return (\r\n    <div key={rerender_board} style={{display:'flex',flexDirection:'column'}}>\r\n            {Board.map((row,x_index) => {\r\n                return (\r\n                    <div style={{display:'flex',flexDirection:'row'}}>\r\n                        {row.map( (type,y_index) => {\r\n                            // number={(x_index * Board[0].length + y_index) + \"\"}\r\n                            return(<Tile handleClick={handleClick} key={y_index} x_index={x_index} y_index={y_index} ready_stage={true} available_tiles={available_tiles} setAvailableTiles={setAvailableTiles} type={type} />)})\r\n                        }\r\n                    </div>)\r\n            })}\r\n            <div style={{display:'flex' ,justifyContent:'space-between',marginTop:40}}>\r\n                {available_tiles.map((count,index) => {\r\n                    if(index === 0 ){\r\n                        return(null)\r\n                    }\r\n                    return(<Tile disabled={true} number={count} type={index}/>)\r\n                })}\r\n            </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Board;\r\n","import React,{useState,useEffect} from 'react';\r\nimport queryString from 'query-string'\r\nimport {Redirect} from 'react-router-dom'\r\nimport socket from \"../socket.js\";\r\nimport Board from '../components/Board';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Tile from '../components/Tile'\r\nimport Card from 'react-bootstrap/Card';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport MeetingRoomIcon from '@material-ui/icons/MeetingRoom';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nfunction Lobby({location}) {\r\n    const [state_name, setName] = useState('');\r\n    const [state_room, setRoom] = useState('');\r\n    const [is_ready, setIsReady] = useState(false)\r\n    const [is_all_ready, setIsAllReady] = useState(false)\r\n    const [users_in_room, setUsersInRoom] = useState([]);\r\n    const [board_ready, setBoardReady] = useState();\r\n    const [board, setBoard] = useState([]);\r\n    useEffect(() => {\r\n        const {name,room} = queryString.parse(location.search)\r\n\r\n        setName(name)\r\n        setRoom(room)\r\n        socket.on('usersInRoom', (users)=>{\r\n            console.log('usersinroom')\r\n            // const stringUsers = users.map(user => `${user.name} ready - ${user.is_ready} `)\r\n            setUsersInRoom(users)\r\n        })\r\n\r\n        socket.on('allUsersReady', ()=>{\r\n            setIsAllReady(true)\r\n        })\r\n        \r\n        socket.emit('join', {name,room} ,({users,error}) =>{\r\n        } )\r\n        \r\n        return () => {\r\n            if(!is_all_ready){\r\n                socket.emit('disconnect',socket)\r\n                socket.off()\r\n            }\r\n            \r\n        }\r\n    }, []);\r\n\r\n    // useEffect(() => {\r\n    //     socket.emit('usersInRoom', (users_in_room,() => {\r\n\r\n    //     }))\r\n    // }, [users_in_room]);\r\n\r\n    function readyClicked() {\r\n        socket.emit('playerReady' , {room:state_room , board} , (status) => {\r\n            console.log(board)\r\n            setIsReady(status)\r\n        })\r\n    }\r\n\r\n\r\n  return (\r\n      <div style={{minHeight:'100%', border:'solid', display:'flex',justifyContent:'center',alignItems:'center'}}>\r\n        <Card style={{padding:40}}>\r\n            <div style={{display:'flex' ,justifyContent:'center',margin:20}}>\r\n                <h1 >\r\n                    Rps online\r\n                </h1>\r\n            </div>\r\n            <div style={{display:'flex' ,justifyContent:'space-between'}}>\r\n                <Card style={{flex:1,flexDirection:'row',justifyContent:'center',alignItems:'center',padding:10,margin:10}}>\r\n                    <AccountCircleIcon/>\r\n                    &nbsp;\r\n                    <h5>\r\n                        {(users_in_room && users_in_room.length > 0 ) ? `player 1: ${users_in_room[0]['name']}` : `waiting`}\r\n                    </h5>\r\n                        {(users_in_room && users_in_room[0] && users_in_room[0]['is_ready']) ? <CheckBoxIcon/> : <CheckBoxOutlineBlankIcon/>}\r\n                </Card>\r\n                <Card style={{flex:1,flexDirection:'row',justifyContent:'center',alignItems:'center',padding:10,margin:10}}>\r\n                    <AccountCircleIcon/>\r\n                    &nbsp;\r\n                    <h5>\r\n                        {(users_in_room && users_in_room.length > 1 ) ? `player 2: ${users_in_room[1]['name']}` : `waiting`}\r\n                    </h5>\r\n                        {(users_in_room && users_in_room[1] && users_in_room[1]['is_ready']) ? <CheckBoxIcon/> : <CheckBoxOutlineBlankIcon/>}\r\n                </Card>\r\n                <Card style={{flex:1,flexDirection:'row',justifyContent:'center',alignItems:'center',padding:10,margin:10}}>\r\n                    <MeetingRoomIcon/>\r\n                    &nbsp;\r\n                    <h5>\r\n                        room: {state_room}\r\n                    </h5>\r\n                </Card>\r\n            </div>\r\n            <div style={{flex:1,marginBottom:10 ,display:'flex', justifyContent:'center',alignItems:'stretch'}}>\r\n                    {(board_ready) ? (is_ready) ? \r\n                        <Button onClick={readyClicked}>\r\n                            not ready\r\n                        </Button> \r\n                        : \r\n                        <Button onClick={readyClicked}>\r\n                            ready\r\n                        </Button> \r\n                        : \r\n                        <Button variant=\"secondary\" disabled>\r\n                            ready\r\n                        </Button>}\r\n                </div>\r\n            \r\n            <Board setBoardReady={setBoardReady} setBoard={setBoard}/>\r\n            {(is_all_ready ? <Redirect  to={(!state_name || !state_room) ? (`${process.env.PUBLIC_URL}/`) : `${process.env.PUBLIC_URL}/Game?name=${state_name}&room=${state_room}`} /> : null)}\r\n        </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Lobby;\r\n","import React ,{useState} from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nfunction MainMenu() {\r\n  const [name, setName] = useState('');\r\n  const [room, setRoom] = useState('');\r\n\r\n  return (\r\n    <div style={{minHeight:'100%', border:'solid', display:'flex',justifyContent:'center',alignItems:'center'}}>\r\n      <Card style={{padding:100}}>\r\n          <div style={{marginBottom:80}}>\r\n            <h1> Rps online</h1>\r\n          </div>\r\n          <div style={{marginBottom:80}}>\r\n            <div style={{marginBottom:20}}>\r\n              <input placeholder=\"name\" type=\"text\" onChange={(e) => setName(e.target.value)}/>\r\n            </div>\r\n            <div style={{marginBottom:20}}>\r\n              <input placeholder=\"room\" type=\"text\" onChange={(e) => setRoom(e.target.value)}/>\r\n            </div>\r\n          </div>\r\n          <div style={{display:'flex' ,justifyContent:'center'}}>\r\n            <Link  onClick={e => (!name || !room) ? e.preventDefault() : null} to={(!name || !room) ? `${process.env.PUBLIC_URL}/` : `${process.env.PUBLIC_URL}/Lobby?name=${name}&room=${room}`}>\r\n                <Button variant=\"primary\"> Join Room </Button>\r\n            </Link>\r\n          </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainMenu;\r\n","import React from 'react';\nimport {BrowserRouter as Router,Route} from 'react-router-dom'\nimport Game from \"../src/views/Game\"\nimport Lobby from \"../src/views/Lobby\"\nimport MainMenu from '../src/views/MainMenu'\nfunction App() {\n  return (\n    <Router>\n      <Route path={`${process.env.PUBLIC_URL}/`} exact component={MainMenu}/>\n      <Route path={`${process.env.PUBLIC_URL}/Lobby`} exact component={Lobby}/>\n      <Route path={`${process.env.PUBLIC_URL}/Game`} exact component={Game}/>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}