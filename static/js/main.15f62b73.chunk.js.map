{"version":3,"sources":["socket.js","components/Tile.js","components/GameBoard.js","components/TieModal.js","components/WonModal.js","views/Game.js","components/Board.js","views/Lobby.js","views/MainMenu.js","App.js","serviceWorker.js","index.js"],"names":["socket","openSocket","colors","Tile","props","useState","type","handleClick","disabled","x_index","y_index","style","flex","display","flexDirection","justifyContent","alignItems","is_enemy","onClick","background","height","width","size","num","color","selected_tile","iconTile","marginTop","number","GameBoard","Board","setBoard","setSelectedTile","freeTiles","length","console","log","my_turn","x1","y1","x2","y2","player_id","makeMove","checkSelsectTile","from_x","from_y","isSelected","useEffect","board","map","row","key","tile","slice","reverse","TieModal","show_loading_animation","setShowLoadingAnimation","tieBreak","tie_response","emit","room","on","result","setModalShow","setRerenderBoard","Date","Modal","show","modalShow","aria-labelledby","centered","Header","closeButton","Title","id","Body","a","b","WonModal","player_won","Footer","Button","setResetGame","Game","location","state_room","setRoom","setName","setMyTurn","Error","setError","setPlayerId","users_in_room","setUsersInRoom","rerender_board","React","modal_show","setPlayerWon","queryString","parse","search","name","users","game","turn","user","find","off","minHeight","border","Card","padding","margin","marginBottom","to","process","available_tiles","setAvailableTiles","newValue","value","tmp","checkMoveLigal","newBoard","index","setBoardReady","checkBoardReady","ready_stage","count","Lobby","state_name","is_ready","setIsReady","is_all_ready","setIsAllReady","board_ready","readyClicked","status","error","variant","MainMenu","placeholder","onChange","e","target","preventDefault","App","path","exact","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.15f62b73.chunk.js","sourcesContent":["import openSocket from 'socket.io-client';\r\n\r\nconst socket = openSocket(\"https://rps-backend2.herokuapp.com/\");\r\n// const socket = openSocket(\"localhost:4000/\");\r\nexport default socket;","import React ,{useEffect,useState} from 'react';\r\nimport { TiScissorsOutline } from 'react-icons/ti';\r\nimport { GiRock,GiBoxTrap } from 'react-icons/gi';\r\nimport { FaToiletPaper,FaFlag } from 'react-icons/fa';\r\nimport { SiPostwoman } from 'react-icons/si';\r\n\r\nconst colors = [\"#f4f4f4\",\"#4fc1e8\",\"#a0d568\",\"#ffce54\",\"#ac92eb\",\"#ed5564\"]\r\nfunction Tile(props) {\r\n\r\n    const [type, setType] = useState(props.type);\r\n    \r\n\r\n    function handleClick(){\r\n\r\n        if(!props.disabled){\r\n            props.handleClick(props.x_index,props.y_index )\r\n            return\r\n        }\r\n\r\n    }\r\n    function iconTile(num) {\r\n        if(props.is_enemy){\r\n            num = 6\r\n        }\r\n        switch (num) {\r\n            case 0:\r\n                return (null)\r\n            case 1:\r\n                return (<GiRock color={(props.selected_tile) ? \"blue\" : \"black\"} size={'3em'}/>)\r\n            case 2:\r\n                return (<FaToiletPaper color={(props.selected_tile) ? \"blue\" : \"black\"} size={'3em'}/>)\r\n            case 3:\r\n                return (<TiScissorsOutline color={(props.selected_tile) ? \"blue\" : \"black\"} size={'3em'}/>)\r\n            case 4:\r\n                return (<GiBoxTrap color={(props.selected_tile) ? \"blue\" : \"black\"} size={'3em'}/>)\r\n            case 5:\r\n                return (<FaFlag color={(props.selected_tile) ? \"blue\" : \"black\"} size={'3em'}/>)\r\n            case 6:\r\n                return (<SiPostwoman size={'3em'}/>)\r\n        \r\n            default:\r\n                return (null)\r\n        }\r\n    }\r\n\r\n  return (\r\n    <div style={{flex:1 ,display:'flex', flexDirection:'column' , justifyContent:'center' ,alignItems:'center'}}>\r\n        {(props.is_enemy) ? \r\n        (\r\n                <button onClick={handleClick} style={{background:'#ed5564' , height:70,width:70}}>\r\n                    {<SiPostwoman size={'3em'}/>}  \r\n                </button>\r\n        ) : (\r\n            <button onClick={handleClick} style={{background:colors[type] , height:70,width:70}}> {iconTile(type)}  </button>\r\n        )} \r\n        \r\n        {(props.disabled) ? (\r\n            <h5 style={{marginTop:10}}>\r\n                {props.number}\r\n            </h5>\r\n            ) : null }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tile;\r\n","import React ,{useState,useEffect} from 'react';\r\nimport Tile  from './Tile';\r\nfunction GameBoard(props) {\r\n\r\n    const [Board, setBoard] = useState([[],[],[],[],[],[],[],[]]);\r\n    const [selected_tile, setSelectedTile] = useState(null);\r\n    const [rerender_board, setRerenderBoard] = useState();\r\n    useEffect(() => {\r\n        setBoard(props.board)\r\n    }, [props.board]);\r\n\r\n    \r\n    function freeTiles (x_index,y_index){\r\n        if(x_index >= Board.length || y_index >= Board[0].length || x_index < 0 || y_index <0 )\r\n            {\r\n                console.log(\"something went wrong\")\r\n                    return false;\r\n            }\r\n        if(Board[x_index][y_index]['player_id'] === props.my_turn ){\r\n            return false;\r\n        }\r\n        return true\r\n    }\r\n\r\n\r\n    function checkSelsectTile(x_index,y_index){\r\n        if(x_index > Board.length || y_index > Board[0].length || x_index < 0 || y_index <0 )\r\n            {\r\n                console.log(\"something went wrong\")\r\n                return false;\r\n            }\r\n        if(Board[x_index][y_index]['player_id'] !== props.my_turn ){\r\n                console.log(\"not your player select difrent tile\",Board[x_index][y_index]['player_id'] )\r\n                return false;\r\n            }\r\n        if(freeTiles(x_index + 1,y_index) || freeTiles(x_index - 1,y_index) \r\n                || freeTiles(x_index ,y_index + 1 ) || freeTiles(x_index,y_index - 1))\r\n            {\r\n                return true\r\n            }\r\n        return false\r\n    }\r\n\r\n    function isLegal(x1,y1,x2,y2){\r\n        if(x1 + 1 === x2 && y1 === y2){\r\n            return true\r\n        }\r\n        if(x1 - 1 === x2 && y1 === y2){\r\n            return true\r\n        }\r\n        if(x1 === x2 && y1 + 1 === y2){\r\n            return true\r\n        }\r\n        if(x1 === x2 && y1 - 1 === y2){\r\n            return true\r\n        }\r\n        return false  \r\n    }\r\n\r\n    function handleClick(x_index,y_index){\r\n        if(props.player_id === props.my_turn){\r\n            if(selected_tile){\r\n                console.log(x_index,y_index)\r\n                if(Board[x_index][y_index]['player_id'] !== props.player_id && (isLegal(x_index,y_index,selected_tile['from_x'],selected_tile['from_y']))){\r\n                    props.makeMove(x_index,y_index,selected_tile['from_x'],selected_tile['from_y'])\r\n                    setSelectedTile(null)\r\n                }\r\n                \r\n                // props.setMyTurn((props.my_turn + 1)%2)\r\n            }else{\r\n                \r\n                if(checkSelsectTile(x_index,y_index)){\r\n                    setSelectedTile({from_x:x_index,from_y:y_index })\r\n                }else{\r\n                    setSelectedTile(null)\r\n                }\r\n            }\r\n            \r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    function isSelected(x_index,y_index){\r\n        if(!selected_tile)\r\n            return false\r\n        if(selected_tile['from_x'] === x_index && selected_tile['from_y'] === y_index){\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n    \r\n  return (\r\n    <div  style={{display:'flex',flexDirection:'column'}}>\r\n        {(props.player_id === 1) ? (\r\n            Board.map((row,x_index) => {\r\n                return (\r\n                    <div style={{display:'flex',flexDirection:'row'}}>\r\n                        {row.map( (type,y_index) => {\r\n                            // number={(x_index * Board[0].length + y_index) + \"\"}\r\n                            return(<Tile is_enemy={(type.player_id === 0)} selected_tile={isSelected(x_index,y_index)} handleClick={handleClick} key={y_index} x_index={x_index} y_index={y_index} type={type.tile} />)})\r\n                        }\r\n                    </div>)\r\n            })) : (\r\n                Board.slice(0).reverse().map((row,x_index) => {\r\n                return (\r\n                    <div style={{display:'flex',flexDirection:'row'}}>\r\n                        {row.map( (type,y_index) => {\r\n                            // number={(x_index * Board[0].length + y_index) + \"\"}\r\n                            return(<Tile is_enemy={(type.player_id === 1)} selected_tile={isSelected(7-x_index,y_index)} handleClick={handleClick}  key={y_index} x_index={7-x_index} y_index={y_index} type={type.tile} />)})\r\n                        }\r\n                    </div>)\r\n            })\r\n        )}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameBoard;\r\n","import React,{useState,useEffect} from 'react';\r\nimport Tile from './Tile'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport socket from \"../socket.js\";\r\nimport Button from 'react-bootstrap/Button'\r\n  function TieModal(props) {\r\n    \r\n    const [show_loading_animation, setShowLoadingAnimation] = useState();\r\n\r\n    function tieBreak(tie_response){\r\n        setShowLoadingAnimation(true)\r\n        socket.emit('tieBreak' , {tie_response,room:props.room} , () => {})\r\n            \r\n    }\r\n    \r\n    useEffect(() => {\r\n        socket.on('tieEnd', (result)=>{\r\n            if(result === true){\r\n                setShowLoadingAnimation(false)\r\n                \r\n                \r\n            }else{\r\n                setShowLoadingAnimation(false)\r\n                props.setModalShow(false)\r\n                props.setRerenderBoard(new Date() + \"\")\r\n            }\r\n            \r\n        })\r\n    }, []);\r\n\r\n    return (\r\n        <Modal\r\n        show={props.modalShow}\r\n        size=\"sm\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Its A tie, choose your weapon\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            {(show_loading_animation) ? 'loading...' : (\r\n                <div style={{display:'flex',flexDirection:'row'}}>\r\n                    <Tile handleClick={(a,b) => tieBreak(1)}  type={1} />\r\n                    <Tile handleClick={(a,b) => tieBreak(2)}  type={2} />\r\n                    <Tile handleClick={(a,b) => tieBreak(3)}  type={3} />\r\n                </div>\r\n            )}\r\n            \r\n        </Modal.Body>\r\n      </Modal>\r\n  \r\n    );\r\n  }\r\nexport default TieModal;","import React,{useState,useEffect} from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button'\r\n  function WonModal(props) {\r\n    \r\n    \r\n    \r\n\r\n    return (\r\n        <Modal\r\n        show={props.player_won !== -1}\r\n        size=\"sm\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Body>\r\n            <h1>player {props.player_won + 1} won the game! </h1>\r\n            \r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={() => props.setResetGame(true)}>Play Again</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n  \r\n    );\r\n  }\r\nexport default WonModal;","import React,{useState,useEffect} from 'react';\r\nimport queryString from 'query-string'\r\nimport socket from \"../socket.js\";\r\nimport GameBoard from \"../components/GameBoard\"\r\nimport {Redirect} from 'react-router-dom'\r\nimport Card from 'react-bootstrap/Card';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport MeetingRoomIcon from '@material-ui/icons/MeetingRoom';\r\nimport { RiArrowLeftRightLine } from 'react-icons/ri';\r\nimport TieModal from '../components/TieModal'\r\nimport WonModal from '../components/WonModal'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction Game({location}) {\r\n    const [state_room, setRoom] = useState('');\r\n    const [state_name, setName] = useState('');\r\n    const [board, setBoard] = useState([]);\r\n    const [my_turn, setMyTurn] = useState(true);\r\n    const [Error, setError] = useState(null);\r\n    const [player_id, setPlayerId] = useState(null);\r\n    const [users_in_room, setUsersInRoom] = useState([]);\r\n    const [rerender_board, setRerenderBoard] = useState();\r\n    const [modal_show, setModalShow] = React.useState(false);\r\n    const [player_won, setPlayerWon] = React.useState(-1);\r\n    const [reset_game, setResetGame] = React.useState(false);\r\n\r\n    \r\n    useEffect(() => {\r\n        const {name,room} = queryString.parse(location.search)\r\n        setName(name)\r\n        setRoom(room)\r\n        socket.on('usersInRoom', (users)=>{\r\n            console.log('usersinroom')\r\n            if(users.length < 2){\r\n                setError('error user left')\r\n                return\r\n            }\r\n            \r\n            setUsersInRoom(users)\r\n        })\r\n\r\n        socket.on('tie', ()=>{\r\n            console.log('tie')\r\n            setModalShow(true)\r\n        })\r\n\r\n        socket.on('updateGame', (game)=>{\r\n            console.log('update')\r\n            if(!game){\r\n                setError('error game fail')\r\n                return\r\n            }\r\n            setBoard(game.board)\r\n            setMyTurn((game.turn) ? 0 : 1  )\r\n            setRerenderBoard(\"supper-uniqe-key\"+ new Date())\r\n            \r\n        })\r\n\r\n        socket.on('player_won', (player_won)=>{\r\n            console.log(player_won)\r\n            setPlayerWon(player_won ? 0 : 1 )\r\n            \r\n            \r\n        })\r\n\r\n\r\n        socket.emit('startedGame',{room,name} , (users,game,name)=>{\r\n            console.log(users,users_in_room)\r\n            console.log(game)\r\n            if(!game){\r\n                setError('error game not found')\r\n                return\r\n            }\r\n            const user = users.find((user) => user.name === name)\r\n            if(!user){\r\n                setError('error user doesnt exists')\r\n                return\r\n            }\r\n            setPlayerId(user['player_id'])\r\n            setBoard(game.board)\r\n            setMyTurn((game.turn) ? 0 : 1 )\r\n            setUsersInRoom(users)\r\n        })\r\n\r\n        \r\n        \r\n        return () => {\r\n            socket.emit('disconnect',socket)\r\n            socket.off()\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        socket.emit('usersInRoom', (users_in_room,() => {\r\n\r\n        }))\r\n    }, [users_in_room]);\r\n\r\n\r\n\r\n    function makeMove(x_index,y_index,from_x,from_y) {\r\n        socket.emit('move' , {room:state_room,x_index,y_index,from_x,from_y} , () => {\r\n\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    \r\n\r\n\r\n  return (\r\n    <div style={{minHeight:'100%', border:'solid', display:'flex',justifyContent:'center',alignItems:'center'}}>\r\n        <Card style={{padding:40}}>\r\n            <div style={{display:'flex' ,justifyContent:'center',margin:20}}>\r\n                <h1 >\r\n                    Rps online\r\n                </h1>\r\n            </div>\r\n            <div style={{display:'flex' ,justifyContent:'space-between'}}>\r\n                <Card style={{flex:1,flexDirection:'row',justifyContent:'center',alignItems:'center',padding:10,margin:10}}>\r\n                    <AccountCircleIcon/>\r\n                    &nbsp;\r\n                    <h5>\r\n                        {(users_in_room && users_in_room.length > 0 ) ? `player 1: ${users_in_room[0]['name']}` : `waiting`}\r\n                    </h5>\r\n                        \r\n                </Card>\r\n                <Card style={{flex:1,flexDirection:'row',justifyContent:'center',alignItems:'center',padding:10,margin:10}}>\r\n                    <AccountCircleIcon/>\r\n                    &nbsp;\r\n                    <h5>\r\n                        {(users_in_room && users_in_room.length > 1 ) ? `player 2: ${users_in_room[1]['name']}` : `waiting`}\r\n                    </h5>\r\n                        \r\n                </Card>\r\n                <Card style={{flex:1,flexDirection:'row',justifyContent:'center',alignItems:'center',padding:10,margin:10}}>\r\n                    <MeetingRoomIcon/>\r\n                    &nbsp;\r\n                    <h5>\r\n                        room: {state_room}\r\n                    </h5>\r\n                </Card>\r\n            </div>\r\n            <div style={{flex:1,marginBottom:10 ,display:'flex', justifyContent:'center',alignItems:'stretch'}}>\r\n                <Card style={{flex:1,flexDirection:'row',justifyContent:'center',alignItems:'center',padding:10,margin:10}}>\r\n                    <RiArrowLeftRightLine/>\r\n                    &nbsp;\r\n                    <h5>\r\n                        turn: {(users_in_room && users_in_room[my_turn] ) ? users_in_room[my_turn]['name'] : null}\r\n                    </h5>\r\n                </Card>\r\n            </div>\r\n            \r\n            <GameBoard key={rerender_board} my_turn={my_turn} makeMove={makeMove} setMyTurn={setMyTurn} player_id={player_id} board={board} setBoard={setBoard}/>\r\n            {(Error) ? <Redirect to={`${process.env.PUBLIC_URL}/`}/> : null }\r\n        </Card>\r\n        <TieModal room={state_room} setRerenderBoard={setRerenderBoard} modalShow={modal_show} setModalShow={setModalShow}/>\r\n        <WonModal player_won={player_won} setResetGame={setResetGame}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n","import React ,{useState,useEffect} from 'react';\r\n\r\nimport Tile  from './Tile';\r\nfunction Board(props) {\r\n\r\n    const [Board, setBoard] = useState((props.board) ? props.board : [[],[],[],[],[],[],[],[]]);\r\n    const [available_tiles, setAvailableTiles] = useState([0,5,5,4,1,1]);\r\n    \r\n    const [rerender_board, setRerenderBoard] = useState();\r\n    useEffect(() => {\r\n        setBoard(Board.map((row,index) => {\r\n            return ([0,0,0,0,0,0,0,0])\r\n        }))\r\n    }, []);\r\n\r\n    function checkBoardReady(){\r\n        for (let index = 1; index < available_tiles.length; index++) {\r\n            const element = available_tiles[index];\r\n            if(element >0 ){\r\n                props.setBoardReady(false)\r\n                return\r\n            }\r\n            \r\n        }\r\n        props.setBoard([...Board])\r\n        props.setBoardReady(true)\r\n    }\r\n\r\n    function checkMoveLigal(x_index,y_index){\r\n        if(x_index > Board.length || y_index > Board[0].length || x_index < 6 || y_index <0 )\r\n        {\r\n            console.log(\"something went wrong\")\r\n            return -1;\r\n        }\r\n        const value = Board[x_index][y_index]\r\n        let newValue;\r\n        \r\n        for(newValue = (value +1)%6 ; newValue < 15 ; newValue = ((newValue + 1)%6)){\r\n            if(available_tiles[newValue] > 0 ) {\r\n                let tmp = [...available_tiles]\r\n                tmp[value] = tmp[value] + 1\r\n                tmp[newValue] = tmp[newValue] - 1\r\n                setAvailableTiles([...tmp]);\r\n                \r\n                return newValue;\r\n                \r\n            }\r\n        }\r\n        return -1;\r\n\r\n    }\r\n    useEffect(() => {\r\n        checkBoardReady();\r\n    }, [Board]);\r\n\r\n    function handleClick(x_index,y_index){\r\n        const newValue = checkMoveLigal(x_index,y_index)\r\n        if(newValue >= 0){\r\n            let newBoard = [...Board]\r\n            newBoard[x_index][y_index] = newValue\r\n            setBoard([...newBoard])\r\n            setRerenderBoard(\"supper-uniqe-key\"+ new Date()+newValue)\r\n        }\r\n        \r\n    }\r\n  return (\r\n    <div key={rerender_board} style={{display:'flex',flexDirection:'column'}}>\r\n            {Board.map((row,x_index) => {\r\n                return (\r\n                    <div style={{display:'flex',flexDirection:'row'}}>\r\n                        {row.map( (type,y_index) => {\r\n                            // number={(x_index * Board[0].length + y_index) + \"\"}\r\n                            return(<Tile handleClick={handleClick} key={y_index} x_index={x_index} y_index={y_index} ready_stage={true} available_tiles={available_tiles} setAvailableTiles={setAvailableTiles} type={type} />)})\r\n                        }\r\n                    </div>)\r\n            })}\r\n            <div style={{display:'flex' ,justifyContent:'space-between',marginTop:40}}>\r\n                {available_tiles.map((count,index) => {\r\n                    if(index === 0 ){\r\n                        return(null)\r\n                    }\r\n                    return(<Tile disabled={true} number={count} type={index}/>)\r\n                })}\r\n            </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Board;\r\n","import React,{useState,useEffect} from 'react';\r\nimport queryString from 'query-string'\r\nimport {Redirect} from 'react-router-dom'\r\nimport socket from \"../socket.js\";\r\nimport Board from '../components/Board';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Tile from '../components/Tile'\r\nimport Card from 'react-bootstrap/Card';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport MeetingRoomIcon from '@material-ui/icons/MeetingRoom';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nfunction Lobby({location}) {\r\n    const [state_name, setName] = useState('');\r\n    const [state_room, setRoom] = useState('');\r\n    const [is_ready, setIsReady] = useState(false)\r\n    const [is_all_ready, setIsAllReady] = useState(false)\r\n    const [users_in_room, setUsersInRoom] = useState([]);\r\n    const [board_ready, setBoardReady] = useState();\r\n    const [board, setBoard] = useState([]);\r\n    useEffect(() => {\r\n        const {name,room} = queryString.parse(location.search)\r\n\r\n        setName(name)\r\n        setRoom(room)\r\n        socket.on('usersInRoom', (users)=>{\r\n            console.log('usersinroom')\r\n            // const stringUsers = users.map(user => `${user.name} ready - ${user.is_ready} `)\r\n            setUsersInRoom(users)\r\n        })\r\n\r\n        socket.on('allUsersReady', ()=>{\r\n            setIsAllReady(true)\r\n        })\r\n        \r\n        socket.emit('join', {name,room} ,({users,error}) =>{\r\n        } )\r\n        \r\n        return () => {\r\n            if(!is_all_ready){\r\n                socket.emit('disconnect',socket)\r\n                socket.off()\r\n            }\r\n            \r\n        }\r\n    }, []);\r\n\r\n    // useEffect(() => {\r\n    //     socket.emit('usersInRoom', (users_in_room,() => {\r\n\r\n    //     }))\r\n    // }, [users_in_room]);\r\n\r\n    function readyClicked() {\r\n        socket.emit('playerReady' , {room:state_room , board} , (status) => {\r\n            console.log(board)\r\n            setIsReady(status)\r\n        })\r\n    }\r\n\r\n\r\n  return (\r\n      <div style={{minHeight:'100%', border:'solid', display:'flex',justifyContent:'center',alignItems:'center'}}>\r\n        <Card style={{padding:40}}>\r\n            <div style={{display:'flex' ,justifyContent:'center',margin:20}}>\r\n                <h1 >\r\n                    Rps online\r\n                </h1>\r\n            </div>\r\n            <div style={{display:'flex' ,justifyContent:'space-between'}}>\r\n                <Card style={{flex:1,flexDirection:'row',justifyContent:'center',alignItems:'center',padding:10,margin:10}}>\r\n                    <AccountCircleIcon/>\r\n                    &nbsp;\r\n                    <h5>\r\n                        {(users_in_room && users_in_room.length > 0 ) ? `player 1: ${users_in_room[0]['name']}` : `waiting`}\r\n                    </h5>\r\n                        {(users_in_room && users_in_room[0] && users_in_room[0]['is_ready']) ? <CheckBoxIcon/> : <CheckBoxOutlineBlankIcon/>}\r\n                </Card>\r\n                <Card style={{flex:1,flexDirection:'row',justifyContent:'center',alignItems:'center',padding:10,margin:10}}>\r\n                    <AccountCircleIcon/>\r\n                    &nbsp;\r\n                    <h5>\r\n                        {(users_in_room && users_in_room.length > 1 ) ? `player 2: ${users_in_room[1]['name']}` : `waiting`}\r\n                    </h5>\r\n                        {(users_in_room && users_in_room[1] && users_in_room[1]['is_ready']) ? <CheckBoxIcon/> : <CheckBoxOutlineBlankIcon/>}\r\n                </Card>\r\n                <Card style={{flex:1,flexDirection:'row',justifyContent:'center',alignItems:'center',padding:10,margin:10}}>\r\n                    <MeetingRoomIcon/>\r\n                    &nbsp;\r\n                    <h5>\r\n                        room: {state_room}\r\n                    </h5>\r\n                </Card>\r\n            </div>\r\n            <div style={{flex:1,marginBottom:10 ,display:'flex', justifyContent:'center',alignItems:'stretch'}}>\r\n                    {(board_ready) ? (is_ready) ? \r\n                        <Button onClick={readyClicked}>\r\n                            not ready\r\n                        </Button> \r\n                        : \r\n                        <Button onClick={readyClicked}>\r\n                            ready\r\n                        </Button> \r\n                        : \r\n                        <Button variant=\"secondary\" disabled>\r\n                            ready\r\n                        </Button>}\r\n                </div>\r\n            \r\n            <Board setBoardReady={setBoardReady} setBoard={setBoard}/>\r\n            {(is_all_ready ? <Redirect  to={(!state_name || !state_room) ? (`${process.env.PUBLIC_URL}/`) : `${process.env.PUBLIC_URL}/Game?name=${state_name}&room=${state_room}`} /> : null)}\r\n        </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Lobby;\r\n","import React ,{useState} from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nfunction MainMenu() {\r\n  const [name, setName] = useState('');\r\n  const [room, setRoom] = useState('');\r\n\r\n  return (\r\n    <div style={{minHeight:'100%', border:'solid', display:'flex',justifyContent:'center',alignItems:'center'}}>\r\n      <Card style={{padding:100}}>\r\n          <div style={{marginBottom:80}}>\r\n            <h1> Rps online</h1>\r\n          </div>\r\n          <div style={{marginBottom:80}}>\r\n            <div style={{marginBottom:20}}>\r\n              <input placeholder=\"name\" type=\"text\" onChange={(e) => setName(e.target.value)}/>\r\n            </div>\r\n            <div style={{marginBottom:20}}>\r\n              <input placeholder=\"room\" type=\"text\" onChange={(e) => setRoom(e.target.value)}/>\r\n            </div>\r\n          </div>\r\n          <div style={{display:'flex' ,justifyContent:'center'}}>\r\n            <Link  onClick={e => (!name || !room) ? e.preventDefault() : null} to={(!name || !room) ? `${process.env.PUBLIC_URL}/` : `${process.env.PUBLIC_URL}/Lobby?name=${name}&room=${room}`}>\r\n                <Button variant=\"primary\"> Join Room </Button>\r\n            </Link>\r\n          </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainMenu;\r\n","import React from 'react';\nimport {BrowserRouter as Router,Route} from 'react-router-dom'\nimport Game from \"../src/views/Game\"\nimport Lobby from \"../src/views/Lobby\"\nimport MainMenu from '../src/views/MainMenu'\nfunction App() {\n  return (\n    <Router>\n      <Route path={`${process.env.PUBLIC_URL}/`} exact component={MainMenu}/>\n      <Route path={`${process.env.PUBLIC_URL}/Lobby`} exact component={Lobby}/>\n      <Route path={`${process.env.PUBLIC_URL}/Game`} exact component={Game}/>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}